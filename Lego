local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (v29==2) then function v34()local v43=0;local v44;local v45;while true do if (v43==1) then return (v45 * 256) + v44 ;end if (v43==0) then v44,v45=v9(v27,v30,v30 + 2 );v30=v30 + 2 ;v43=1;end end end v35=nil;function v35()local v46,v47,v48,v49=v9(v27,v30,v30 + 3 );v30=v30 + 4 ;return (v49 * 16777216) + (v48 * 65536) + (v47 * 256) + v46 ;end v36=nil;v29=3;end if (5==v29) then v41=nil;function v41(v50,v51,v52)local v53=0;local v54;local v55;local v56;while true do if (1==v53) then v56=v50[3];return function(...)local v100=v54;local v101=v55;local v102=v56;local v103=v39;local v104=1;local v105= -1;local v106={};local v107={...};local v108=v20("#",...) -1 ;local v109={};local v110={};for v115=0,v108 do if (v115>=v102) then v106[v115-v102 ]=v107[v115 + 1 ];else v110[v115]=v107[v115 + 1 ];end end local v111=(v108-v102) + 1 ;local v112;local v113;while true do local v116=0;while true do if (v116==1) then if (v113<=(57 + 6)) then if (v113<=31) then if (v113<=15) then if (v113<=7) then if (v113<=3) then if (v113<=(1 -0)) then if (v113>0) then v110[v112[2]]=v110[v112[1068 -(68 + 997) ]]/v110[v112[4]] ;else v110[v112[2]]=v110[v112[3]]%v112[4] ;end elseif (v113>2) then do return;end else local v139=v101[v112[3]];local v140;local v141={};v140=v18({},{[v7("\112\100\35\32\209\73\87","\44\47\59\74\78\181")]=function(v343,v344)local v345=0;local v346;while true do if (v345==0) then v346=v141[v344];return v346[1][v346[1272 -(226 + 1044) ]];end end end,[v7("\26\238\84\95\164\44\223\94\95\171","\211\69\177\58\58")]=function(v347,v348,v349)local v350=v141[v348];v350[1][v350[2]]=v349;end});for v352=1,v112[4] do v104=v104 + 1 ;local v353=v100[v104];if (v353[1]==65) then v141[v352-1 ]={v110,v353[3]};else v141[v352-1 ]={v51,v353[3]};end v109[ #v109 + 1 ]=v141;end v110[v112[2]]=v41(v139,v140,v52);end elseif (v113<=5) then if (v113>4) then local v143=v112[2];local v144={v110[v143](v110[v143 + 1 ])};local v145=0;for v355=v143,v112[4] do v145=v145 + (4 -3) ;v110[v355]=v144[v145];end else v110[v112[2]]= not v110[v112[3]];end elseif (v113==6) then if (v110[v112[2]]==v112[4]) then v104=v104 + 1 ;else v104=v112[3];end else local v147=v112[119 -(32 + 85) ];local v148=v110[v147];for v358=v147 + 1 ,v112[3] do v15(v148,v110[v358]);end end elseif (v113<=11) then if (v113<=9) then if (v113>8) then local v149=v112[2];v110[v149](v21(v110,v149 + 1 ,v112[3 + 0 ]));elseif (v110[v112[2]]<=v112[4]) then v104=v104 + 1 ;else v104=v112[3];end elseif (v113==10) then local v150=0;local v151;while true do if (0==v150) then v151=v112[2];do return v110[v151](v21(v110,v151 + 1 ,v112[3]));end break;end end elseif (v110[v112[2]]==v110[v112[4]]) then v104=v104 + 1 ;else v104=v112[3];end elseif (v113<=13) then if (v113==12) then if v110[v112[2]] then v104=v104 + 1 ;else v104=v112[3];end else v110[v112[2]]=v110[v112[3]];end elseif (v113>14) then local v154=0;local v155;local v156;local v157;while true do if (v154==1) then v157=0;for v451=v155,v112[4] do local v452=0;while true do if (v452==0) then v157=v157 + 1 ;v110[v451]=v156[v157];break;end end end break;end if (v154==0) then v155=v112[2];v156={v110[v155](v21(v110,v155 + 1 ,v105))};v154=1;end end else v110[v112[1 + 1 ]]=v110[v112[3]] + v110[v112[4]] ;end elseif (v113<=23) then if (v113<=19) then if (v113<=17) then if (v113>16) then v110[v112[2]]=v112[3]~=0 ;else for v359=v112[2],v112[3] do v110[v359]=nil;end end elseif (v113==18) then do return v110[v112[2]];end else local v160=0;while true do if (v160==0) then v110[v112[2]]=v112[3]~=0 ;v104=v104 + 1 ;break;end end end elseif (v113<=21) then if (v113==(977 -(892 + 65))) then v110[v112[4 -2 ]]={};else local v162=0;local v163;while true do if (v162==0) then v163=v112[2];v110[v163](v21(v110,v163 + 1 ,v105));break;end end end elseif (v113>22) then local v164=0;local v165;while true do if (0==v164) then v165=v112[2];v110[v165]=v110[v165](v21(v110,v165 + 1 ,v105));break;end end else v110[v112[2]]=v110[v112[5 -2 ]]%v112[4] ;end elseif (v113<=27) then if (v113<=25) then if (v113>24) then v110[v112[3 -1 ]]=v51[v112[3]];else local v169=v112[2];v110[v169](v21(v110,v169 + 1 ,v112[3]));end elseif (v113==(376 -(87 + 263))) then v110[v112[182 -(67 + 113) ]]=v110[v112[3]]%v110[v112[4]] ;else v110[v112[2]]=v52[v112[3]];end elseif (v113<=(22 + 7)) then if (v113>(68 -40)) then v110[v112[2]]=v110[v112[3]] + v110[v112[4]] ;elseif (v110[v112[2]]~=v112[4]) then v104=v104 + 1 ;else v104=v112[3];end elseif (v113>30) then v110[v112[2]][v110[v112[3]]]=v110[v112[4]];elseif (v110[v112[2]]>v112[4]) then v104=v104 + 1 ;else v104=v112[3];end elseif (v113<=47) then if (v113<=39) then if (v113<=35) then if (v113<=33) then if (v113==32) then local v176=0;local v177;local v178;local v179;while true do if (v176==1) then v179=v112[3];for v453=1 + 0 ,v179 do v178[v453]=v110[v177 + v453 ];end break;end if (v176==0) then v177=v112[2];v178=v110[v177];v176=1;end end elseif (v112[2]<=v110[v112[4]]) then v104=v104 + 1 ;else v104=v112[3];end elseif (v113==34) then v110[v112[2]]=v52[v112[3]];else local v182=0;local v183;local v184;local v185;while true do if (v182==0) then v183=v112[2];v184=v110[v183];v182=1;end if (v182==1) then v185=v112[3];for v456=1,v185 do v184[v456]=v110[v183 + v456 ];end break;end end end elseif (v113<=37) then if (v113==36) then local v186=0;local v187;while true do if (v186==0) then v187=v112[2];do return v21(v110,v187,v187 + v112[3] );end break;end end elseif (v112[2]>v110[v112[4]]) then v104=v104 + 1 ;else v104=v112[3];end elseif (v113==38) then do return v110[v112[7 -5 ]];end else local v188=0;local v189;local v190;while true do if (v188==0) then v189=v112[2];v190={};v188=1;end if (1==v188) then for v459=1, #v109 do local v460=0;local v461;while true do if (v460==0) then v461=v109[v459];for v518=0, #v461 do local v519=0;local v520;local v521;local v522;while true do if (v519==1) then v522=v520[954 -(802 + 150) ];if ((v521==v110) and (v522>=v189)) then local v535=0;while true do if (0==v535) then v190[v522]=v521[v522];v520[1]=v190;break;end end end break;end if (v519==0) then v520=v461[v518];v521=v520[1];v519=1;end end end break;end end end break;end end end elseif (v113<=43) then if (v113<=41) then if (v113>40) then v110[v112[2]]=v110[v112[3]] + v112[4] ;else v110[v112[2]][v112[3]]=v112[4];end elseif (v113==42) then v110[v112[2]]=v51[v112[3]];elseif (v112[2]==v110[v112[4]]) then v104=v104 + 1 ;else v104=v112[7 -4 ];end elseif (v113<=45) then if (v113==44) then local v196=v112[2];v110[v196]=v110[v196]();else for v361=v112[2],v112[3] do v110[v361]=nil;end end elseif (v113==46) then if (v110[v112[2]]~=v110[v112[4]]) then v104=v104 + 1 ;else v104=v112[3];end else v110[v112[2]]=v110[v112[3]] + v112[4] ;end elseif (v113<=(99 -44)) then if (v113<=51) then if (v113<=49) then if (v113==48) then v110[v112[2 + 0 ]]=v110[v112[3]] -v110[v112[4]] ;else do return v110[v112[2]]();end end elseif (v113>50) then local v200=0;local v201;local v202;while true do if (v200==0) then v201=v112[2];v202=v110[v201];v200=1;end if (v200==1) then for v462=v201 + 1 ,v105 do v15(v202,v110[v462]);end break;end end elseif (v112[2]<=v110[v112[4]]) then v104=v104 + (998 -(915 + 82)) ;else v104=v112[3];end elseif (v113<=53) then if (v113==52) then local v203=0;local v204;local v205;local v206;local v207;while true do if (v203==1) then v105=(v206 + v204) -1 ;v207=0;v203=2;end if (v203==2) then for v463=v204,v105 do v207=v207 + 1 ;v110[v463]=v205[v207];end break;end if (v203==0) then v204=v112[2];v205,v206=v103(v110[v204](v110[v204 + 1 ]));v203=1;end end else v110[v112[2]]=v110[v112[3]]/v110[v112[4]] ;end elseif (v113==54) then v52[v112[3]]=v110[v112[2]];else v110[v112[2]]= not v110[v112[3]];end elseif (v113<=59) then if (v113<=57) then if (v113==56) then v110[v112[2]][v110[v112[8 -5 ]]]=v110[v112[3 + 1 ]];else local v214=0;local v215;while true do if (v214==0) then v215=v112[2 -0 ];v110[v215]=v110[v215]();break;end end end elseif (v113>58) then local v216=0;local v217;while true do if (v216==0) then v217=v112[2];v110[v217]=v110[v217](v21(v110,v217 + 1 ,v105));break;end end else local v218=0;local v219;local v220;local v221;local v222;while true do if (v218==0) then v219=v112[2];v220,v221=v103(v110[v219](v21(v110,v219 + 1 ,v112[3])));v218=1;end if (v218==2) then for v466=v219,v105 do local v467=0;while true do if (0==v467) then v222=v222 + 1 ;v110[v466]=v220[v222];break;end end end break;end if (v218==1) then v105=(v221 + v219) -1 ;v222=0;v218=2;end end end elseif (v113<=61) then if (v113==(1247 -(1069 + 118))) then v110[v112[2]]=v112[3];else v51[v112[3]]=v110[v112[2]];end elseif (v113>62) then local v227=0;local v228;local v229;local v230;while true do if (v227==0) then v228=v112[2];v229={v110[v228](v110[v228 + 1 ])};v227=1;end if (v227==1) then v230=0;for v468=v228,v112[4] do v230=v230 + 1 ;v110[v468]=v229[v230];end break;end end else local v231=v112[2];local v232=v112[4];local v233=v231 + 2 ;local v234={v110[v231](v110[v231 + (2 -1) ],v110[v233])};for v363=1 -0 ,v232 do v110[v233 + v363 ]=v234[v363];end local v235=v234[1];if v235 then local v386=0;while true do if (v386==0) then v110[v233]=v235;v104=v112[3];break;end end else v104=v104 + 1 ;end end elseif (v113<=95) then if (v113<=79) then if (v113<=71) then if (v113<=(12 + 55)) then if (v113<=(115 -50)) then if (v113==64) then local v236=0;local v237;local v238;local v239;local v240;while true do if (0==v236) then v237=v112[2];v238,v239=v103(v110[v237](v21(v110,v237 + 1 ,v112[3])));v236=1;end if (v236==1) then v105=(v239 + v237) -1 ;v240=0;v236=2;end if (v236==2) then for v471=v237,v105 do local v472=0;while true do if (v472==0) then v240=v240 + 1 + 0 ;v110[v471]=v238[v240];break;end end end break;end end else v110[v112[793 -(368 + 423) ]]=v110[v112[3]];end elseif (v113==66) then local v243=v110[v112[4]];if v243 then v104=v104 + (3 -2) ;else local v387=0;while true do if (v387==0) then v110[v112[2]]=v243;v104=v112[3];break;end end end else local v244=v112[2];local v245,v246=v103(v110[v244](v21(v110,v244 + (19 -(10 + 8)) ,v105)));v105=(v246 + v244) -(3 -2) ;local v247=0;for v366=v244,v105 do local v367=0;while true do if (v367==0) then v247=v247 + 1 ;v110[v366]=v245[v247];break;end end end end elseif (v113<=69) then if (v113>68) then local v248=0;local v249;local v250;local v251;while true do if (0==v248) then v249=v112[2];v250=v110[v249];v248=1;end if (v248==1) then v251=v110[v249 + 2 ];if (v251>0) then if (v250>v110[v249 + 1 ]) then v104=v112[3];else v110[v249 + 3 ]=v250;end elseif (v250<v110[v249 + 1 ]) then v104=v112[445 -(416 + 26) ];else v110[v249 + 3 ]=v250;end break;end end else local v252=v112[6 -4 ];v110[v252]=v110[v252](v21(v110,v252 + 1 ,v112[3]));end elseif (v113>70) then v51[v112[3]]=v110[v112[2]];else v110[v112[2]]=v110[v112[3]] -v110[v112[2 + 2 ]] ;end elseif (v113<=(132 -57)) then if (v113<=73) then if (v113==72) then v110[v112[2]]();else local v257=v112[2];do return v110[v257](v21(v110,v257 + 1 ,v112[441 -(145 + 293) ]));end end elseif (v113==74) then do return;end else do return v110[v112[2]]();end end elseif (v113<=77) then if (v113==(506 -(44 + 386))) then if v110[v112[2]] then v104=v104 + 1 ;else v104=v112[1489 -(998 + 488) ];end elseif (v110[v112[2]]<=v112[4]) then v104=v104 + 1 ;else v104=v112[3];end elseif (v113>78) then v110[v112[2]][v112[3]]=v110[v112[4]];else v110[v112[2]]();end elseif (v113<=87) then if (v113<=83) then if (v113<=81) then if (v113>80) then local v260=0;local v261;while true do if (v260==0) then v261=v112[2];v110[v261](v110[v261 + 1 ]);break;end end else local v262=v112[2];v110[v262](v110[v262 + 1 ]);end elseif (v113==82) then v110[v112[2]]=v41(v101[v112[3]],nil,v52);else local v264=0;local v265;local v266;while true do if (v264==1) then for v475=1, #v109 do local v476=0;local v477;while true do if (0==v476) then v477=v109[v475];for v523=0 + 0 , #v477 do local v524=v477[v523];local v525=v524[1];local v526=v524[2];if ((v525==v110) and (v526>=v265)) then local v527=0;while true do if (v527==0) then v266[v526]=v525[v526];v524[1]=v266;break;end end end end break;end end end break;end if (0==v264) then v265=v112[2];v266={};v264=1;end end end elseif (v113<=85) then if (v113>84) then local v267=v110[v112[4]];if v267 then v104=v104 + 1 ;else local v390=0;while true do if (v390==0) then v110[v112[2]]=v267;v104=v112[3];break;end end end elseif (v110[v112[2]]==v110[v112[4]]) then v104=v104 + 1 ;else v104=v112[3];end elseif (v113==86) then local v268=v112[2];local v269=v110[v268];local v270=v110[v268 + 2 ];if (v270>0) then if (v269>v110[v268 + 1 ]) then v104=v112[3];else v110[v268 + 3 + 0 ]=v269;end elseif (v269<v110[v268 + 1 ]) then v104=v112[3];else v110[v268 + 3 ]=v269;end else v110[v112[2]]=v110[v112[775 -(201 + 571) ]][v112[4]];end elseif (v113<=91) then if (v113<=89) then if (v113>88) then local v273=v112[2];local v274,v275=v103(v110[v273](v21(v110,v273 + 1 ,v105)));v105=(v275 + v273) -1 ;local v276=0;for v368=v273,v105 do v276=v276 + 1 ;v110[v368]=v274[v276];end elseif (v110[v112[2]]~=v112[4]) then v104=v104 + (1139 -(116 + 1022)) ;else v104=v112[3];end elseif (v113==90) then local v277=0;local v278;local v279;local v280;local v281;while true do if (v277==2) then for v482=v278,v105 do local v483=0;while true do if (v483==0) then v281=v281 + 1 + 0 ;v110[v482]=v279[v281];break;end end end break;end if (v277==0) then v278=v112[2];v279,v280=v103(v110[v278](v110[v278 + 1 ]));v277=1;end if (v277==1) then v105=(v280 + v278) -1 ;v281=0 -0 ;v277=2;end end else local v282=0;local v283;local v284;local v285;while true do if (v282==1) then v285=v110[v283] + v284 ;v110[v283]=v285;v282=2;end if (v282==0) then v283=v112[2];v284=v110[v283 + 2 ];v282=1;end if (v282==2) then if (v284>0) then if (v285<=v110[v283 + 1 ]) then local v510=0;while true do if (v510==0) then v104=v112[3];v110[v283 + 3 ]=v285;break;end end end elseif (v285>=v110[v283 + 1 ]) then local v511=0;while true do if (v511==0) then v104=v112[3];v110[v283 + (10 -7) ]=v285;break;end end end break;end end end elseif (v113<=93) then if (v113==92) then local v286=v112[7 -5 ];local v287=v112[4];local v288=v286 + 2 ;local v289={v110[v286](v110[v286 + 1 ],v110[v288])};for v371=1,v287 do v110[v288 + v371 ]=v289[v371];end local v290=v289[1];if v290 then local v393=0;while true do if (v393==0) then v110[v288]=v290;v104=v112[3];break;end end else v104=v104 + 1 ;end else local v291=v112[2];local v292=v110[v291];for v374=v291 + 1 ,v105 do v15(v292,v110[v374]);end end elseif (v113==94) then v110[v112[2]]=v112[862 -(814 + 45) ] + v110[v112[4]] ;else v110[v112[2]]=v110[v112[3]]%v110[v112[4]] ;end elseif (v113<=111) then if (v113<=103) then if (v113<=(243 -144)) then if (v113<=97) then if (v113==96) then v110[v112[2]]=v112[3] + v110[v112[4]] ;elseif (v110[v112[2]]~=v110[v112[4]]) then v104=v104 + 1 ;else v104=v112[3];end elseif (v113==98) then v110[v112[2]]={};else local v297=v112[1 + 1 ];v110[v297]=v110[v297](v110[v297 + 1 ]);end elseif (v113<=101) then if (v113==100) then v104=v112[3];elseif (v112[2]>v110[v112[4]]) then v104=v104 + 1 ;else v104=v112[2 + 1 ];end elseif (v113>102) then v110[v112[2]]=v110[v112[3]] * v110[v112[4]] ;else local v301=0;local v302;while true do if (v301==0) then v302=v112[2];v110[v302]=v110[v302](v21(v110,v302 + 1 ,v112[3]));break;end end end elseif (v113<=107) then if (v113<=105) then if (v113==104) then v104=v112[3];elseif (v110[v112[887 -(261 + 624) ]]>v112[4]) then v104=v104 + 1 ;else v104=v112[3];end elseif (v113>106) then local v304=0;local v305;while true do if (v304==0) then v305=v112[2];do return v21(v110,v305,v105);end break;end end else local v306=0;local v307;while true do if (v306==0) then v307=v112[2];v110[v307](v21(v110,v307 + 1 ,v105));break;end end end elseif (v113<=109) then if (v113>108) then v110[v112[2]][v112[3]]=v110[v112[4]];else local v310=v112[2];local v311=v110[v112[3]];v110[v310 + 1 ]=v311;v110[v310]=v311[v112[4]];end elseif (v113==110) then local v315=0;local v316;local v317;while true do if (v315==1) then v110[v316 + 1 ]=v317;v110[v316]=v317[v112[4]];break;end if (v315==0) then v316=v112[2];v317=v110[v112[3]];v315=1;end end else v52[v112[3]]=v110[v112[2]];end elseif (v113<=119) then if (v113<=115) then if (v113<=113) then if (v113>112) then local v320=v112[2];v110[v320]=v110[v320](v110[v320 + 1 ]);else v110[v112[2]]=v41(v101[v112[3]],nil,v52);end elseif (v113==114) then v110[v112[2]]= #v110[v112[3]];else v110[v112[2]]=v112[3]~=0 ;end elseif (v113<=117) then if (v113==116) then v110[v112[2]]=v112[3];elseif (v110[v112[3 -1 ]]==v112[4]) then v104=v104 + 1 ;else v104=v112[3];end elseif (v113==118) then local v327=0;local v328;local v329;local v330;while true do if (v327==0) then v328=v112[2];v329=v110[v328 + 2 ];v327=1;end if (2==v327) then if (v329>0) then if (v330<=v110[v328 + 1 ]) then v104=v112[1083 -(1020 + 60) ];v110[v328 + (1426 -(630 + 793)) ]=v330;end elseif (v330>=v110[v328 + (3 -2) ]) then v104=v112[14 -11 ];v110[v328 + 3 ]=v330;end break;end if (v327==1) then v330=v110[v328] + v329 ;v110[v328]=v330;v327=2;end end else v110[v112[2]]= #v110[v112[3]];end elseif (v113<=123) then if (v113<=121) then if (v113>120) then local v332=0;local v333;local v334;local v335;while true do if (v332==0) then v333=v112[2];v334={v110[v333](v21(v110,v333 + 1 + 0 ,v105))};v332=1;end if (v332==1) then v335=0;for v484=v333,v112[4] do local v485=0;while true do if (v485==0) then v335=v335 + 1 ;v110[v484]=v334[v335];break;end end end break;end end else v110[v112[6 -4 ]]=v110[v112[3]] * v110[v112[1751 -(760 + 987) ]] ;end elseif (v113==122) then local v337=0;local v338;while true do if (v337==0) then v338=v112[2];do return v21(v110,v338,v105);end break;end end elseif (v112[1915 -(1789 + 124) ]==v110[v112[4]]) then v104=v104 + 1 ;else v104=v112[3];end elseif (v113<=125) then if (v113>(890 -(745 + 21))) then v110[v112[2]][v112[3]]=v112[4];elseif  not v110[v112[2]] then v104=v104 + 1 + 0 ;else v104=v112[3];end elseif (v113<=126) then v110[v112[2]]=v110[v112[3]][v112[4]];elseif (v113==127) then local v400=0;while true do if (v400==0) then v110[v112[2]]=v112[3]~=0 ;v104=v104 + (2 -1) ;break;end end elseif  not v110[v112[2]] then v104=v104 + 1 ;else v104=v112[3];end v104=v104 + 1 ;break;end if (v116==0) then v112=v100[v104];v113=v112[1];v116=1;end end end end;end if (0==v53) then v54=v50[1];v55=v50[1639 -(1523 + 114) ];v53=1;end end end return v41(v40(),{},v28)(...);end if (v29==0) then v30=1;v31=nil;v27=v12(v11(v27,5),v7("\249\171","\171\215\133\25\149\137"),function(v57)if (v9(v57,2)==79) then local v88=0;while true do if (v88==0) then v31=v8(v11(v57,1,1));return "";end end else local v89=0;local v90;while true do if (v89==0) then v90=v10(v8(v57,16));if v31 then local v128=v13(v90,v31);v31=nil;return v128;else return v90;end break;end end end end);v32=nil;v29=1;end if (v29==4) then v39=nil;function v39(...)return {...},v20("#",...);end v40=nil;function v40()local v58={};local v59={};local v60={};local v61={v58,v59,nil,v60};local v62=v35();local v63={};for v78=1,v62 do local v79=v33();local v80;if (v79==1) then v80=v33()~=0 ;elseif (v79==2) then v80=v36();elseif (v79==3) then v80=v37();end v63[v78]=v80;end v61[7 -4 ]=v33();for v82=1,v35() do local v83=v33();if (v32(v83,1,1)==0) then local v96=v32(v83,2,3);local v97=v32(v83,623 -(555 + 64) ,6);local v98={v34(),v34(),nil,nil};if (v96==(931 -(857 + 74))) then local v117=0;while true do if (v117==0) then v98[3]=v34();v98[4]=v34();break;end end elseif (v96==1) then v98[3]=v35();elseif (v96==(570 -(367 + 201))) then v98[3]=v35() -(2^(943 -(214 + 713))) ;elseif (v96==(1 + 2)) then v98[1 + 2 ]=v35() -(2^16) ;v98[4]=v34();end if (v32(v97,1,1)==1) then v98[2]=v63[v98[2]];end if (v32(v97,2,2)==1) then v98[3]=v63[v98[3]];end if (v32(v97,3,880 -(282 + 595) )==1) then v98[4]=v63[v98[4]];end v58[v82]=v98;end end for v84=1,v35() do v59[v84-1 ]=v40();end return v61;end v29=5;end if (v29==1) then function v32(v65,v66,v67)if v67 then local v91=(v65/(2^(v66-1)))%(2^(((v67-1) -(v66-1)) + (2 -1))) ;return v91-(v91%1) ;else local v92=2^(v66-1) ;return (((v65%(v92 + v92))>=v92) and 1) or 0 ;end end v33=nil;function v33()local v68=v9(v27,v30,v30);v30=v30 + 1 ;return v68;end v34=nil;v29=2;end if (3==v29) then function v36()local v69=v35();local v70=v35();local v71=1;local v72=(v32(v70,1,20) * (2^32)) + v69 ;local v73=v32(v70,21,31);local v74=((v32(v70,32)==1) and  -1) or 1 ;if (v73==0) then if (v72==0) then return v74 * 0 ;else local v114=0;while true do if (v114==0) then v73=2 -1 ;v71=0;break;end end end elseif (v73==2047) then return ((v72==(0 -0)) and (v74 * (1/0))) or (v74 * NaN) ;end return v16(v74,v73-1023 ) * (v71 + (v72/(2^52))) ;end v37=nil;function v37(v75)local v76;if  not v75 then v75=v35();if (v75==0) then return "";end end v76=v11(v27,v30,(v30 + v75) -1 );v30=v30 + v75 ;local v77={};for v86=1, #v76 do v77[v86]=v10(v9(v11(v76,v86,v86)));end return v14(v77);end v38=v35;v29=4;end end end v23("LOL!",v17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 _______   ___       ___  _________  _______      
|\  ___ \ |\  \     |\  \|\___   ___\\  ___ \     
\ \   __/|\ \  \    \ \  \|___ \  \_\ \   __/|    
 \ \  \_|/_\ \  \    \ \  \   \ \  \ \ \  \_|/__  
  \ \  \_|\ \ \  \____\ \  \   \ \  \ \ \  \_|\ \ 
   \ \_______\ \_______\ \__\   \ \__\ \ \_______\
    \|_______|\|_______|\|__|    \|__|  \|_______|

]]--

